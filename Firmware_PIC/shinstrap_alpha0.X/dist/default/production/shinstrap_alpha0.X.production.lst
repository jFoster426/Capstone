

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat May 28 18:09:02 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F16Q40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.32
    17                           ; Generated 10/02/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F16Q40 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _CM1CON0bits	set	112
    52  0000                     _CM1NCH	set	114
    53  0000                     _RA2PPS	set	515
    54  0000                     _ANSELAbits	set	1024
    55  0000                     _TRISAbits	set	1222
    56  0000                     _CM1PCH	set	115
    57  0000                     _TRISCbits	set	1224
    58  0000                     _INTCON0bits	set	1238
    59  0000                     _PIR4bits	set	1207
    60  0000                     _U1RXPPSbits	set	626
    61  0000                     _U1CON0	set	683
    62  0000                     _U1ERRIE	set	691
    63  0000                     _U1ERRIR	set	690
    64  0000                     _U1UIR	set	689
    65  0000                     _U1FIFO	set	688
    66  0000                     _U1BRGH	set	687
    67  0000                     _U1BRGL	set	686
    68  0000                     _U1CON2	set	685
    69  0000                     _U1CON1	set	684
    70  0000                     _U1RXB	set	673
    71  0000                     _LATCbits	set	1216
    72                           
    73                           ; #config settings
    74                           
    75                           	psect	cinit
    76  00FEDA                     __pcinit:
    77                           	callstack 0
    78  00FEDA                     start_initialization:
    79                           	callstack 0
    80  00FEDA                     __initialization:
    81                           	callstack 0
    82  00FEDA                     end_of_initialization:
    83                           	callstack 0
    84  00FEDA                     __end_of__initialization:
    85                           	callstack 0
    86  00FEDA  0100               	movlb	0
    87  00FEDC  EFA6  F07F         	goto	_main	;jump to C main() function
    88                           
    89                           	psect	cstackCOMRAM
    90  000501                     __pcstackCOMRAM:
    91                           	callstack 0
    92  000501                     main@i:
    93                           	callstack 0
    94                           
    95                           ; 4 bytes @ 0x0
    96  000501                     	ds	4
    97  000505                     main@i_293:
    98                           	callstack 0
    99                           
   100                           ; 4 bytes @ 0x4
   101  000505                     	ds	4
   102                           
   103 ;;
   104 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   105 ;;
   106 ;; *************** function _main *****************
   107 ;; Defined at:
   108 ;;		line 120 in file "main.c"
   109 ;; Parameters:    Size  Location     Type
   110 ;;		None
   111 ;; Auto vars:     Size  Location     Type
   112 ;;  i               4    4[COMRAM] unsigned long 
   113 ;;  i               4    0[COMRAM] unsigned long 
   114 ;; Return value:  Size  Location     Type
   115 ;;                  1    wreg      void 
   116 ;; Registers used:
   117 ;;		wreg, status,2, status,0, cstack
   118 ;; Tracked objects:
   119 ;;		On entry : 0/0
   120 ;;		On exit  : 0/0
   121 ;;		Unchanged: 0/0
   122 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   124 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   126 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   127 ;;Total ram usage:        8 bytes
   128 ;; Hardware stack levels required when called: 1
   129 ;; This function calls:
   130 ;;		_cmp1_init
   131 ;;		_uart1_init
   132 ;;		_uart1_read
   133 ;; This function is called by:
   134 ;;		Startup code after reset
   135 ;; This function uses a non-reentrant model
   136 ;;
   137                           
   138                           	psect	text0
   139  00FF4C                     __ptext0:
   140                           	callstack 0
   141  00FF4C                     _main:
   142                           	callstack 127
   143  00FF4C                     
   144                           ;main.c: 122:     TRISCbits.TRISC3 = 0;
   145  00FF4C  96C8               	bcf	200,3,c	;volatile
   146                           
   147                           ;main.c: 123:     TRISCbits.TRISC4 = 0;
   148  00FF4E  98C8               	bcf	200,4,c	;volatile
   149                           
   150                           ;main.c: 125:     LATCbits.LATC3 = 0;
   151  00FF50  96C0               	bcf	192,3,c	;volatile
   152                           
   153                           ;main.c: 126:     LATCbits.LATC4 = 0;
   154  00FF52  98C0               	bcf	192,4,c	;volatile
   155  00FF54                     
   156                           ;main.c: 128:     cmp1_init();
   157  00FF54  EC7A  F07F         	call	_cmp1_init	;wreg free
   158                           
   159                           ;main.c: 129:     uart1_init();
   160  00FF58  EC8B  F07F         	call	_uart1_init	;wreg free
   161  00FF5C                     l61:
   162                           
   163                           ;main.c: 132:     {;main.c: 133:         if (uart1_read() == 'G')
   164  00FF5C  EC70  F07F         	call	_uart1_read	;wreg free
   165  00FF60  0A47               	xorlw	71
   166  00FF62  A4D8               	btfss	status,2,c
   167  00FF64  EFB6  F07F         	goto	u21
   168  00FF68  EFB8  F07F         	goto	u20
   169  00FF6C                     u21:
   170  00FF6C  EFBB  F07F         	goto	l62
   171  00FF70                     u20:
   172  00FF70                     
   173                           ;main.c: 134:         {;main.c: 135:             LATCbits.LATC4 = 1;
   174  00FF70  88C0               	bsf	192,4,c	;volatile
   175                           
   176                           ;main.c: 136:         }
   177  00FF72  EFBC  F07F         	goto	l776
   178  00FF76                     l62:
   179                           
   180                           ;main.c: 138:         {;main.c: 139:             LATCbits.LATC3 = 1;
   181  00FF76  86C0               	bsf	192,3,c	;volatile
   182  00FF78                     l776:
   183                           
   184                           ;main.c: 141:         for (uint32_t i = 0; i < 100000; i++) __nop();
   185  00FF78  0E00               	movlw	0
   186  00FF7A  6E01               	movwf	main@i^(0+1280),c
   187  00FF7C  0E00               	movlw	0
   188  00FF7E  6E02               	movwf	(main@i+1)^(0+1280),c
   189  00FF80  0E00               	movlw	0
   190  00FF82  6E03               	movwf	(main@i+2)^(0+1280),c
   191  00FF84  0E00               	movlw	0
   192  00FF86  6E04               	movwf	(main@i+3)^(0+1280),c
   193  00FF88                     l64:
   194  00FF88  F000               	nop	
   195  00FF8A  0E01               	movlw	1
   196  00FF8C  2601               	addwf	main@i^(0+1280),f,c
   197  00FF8E  0E00               	movlw	0
   198  00FF90  2202               	addwfc	(main@i+1)^(0+1280),f,c
   199  00FF92  2203               	addwfc	(main@i+2)^(0+1280),f,c
   200  00FF94  2204               	addwfc	(main@i+3)^(0+1280),f,c
   201  00FF96  5004               	movf	(main@i+3)^(0+1280),w,c
   202  00FF98  E10D               	bnz	u30
   203  00FF9A  0EA0               	movlw	160
   204  00FF9C  5C01               	subwf	main@i^(0+1280),w,c
   205  00FF9E  0E86               	movlw	134
   206  00FFA0  5802               	subwfb	(main@i+1)^(0+1280),w,c
   207  00FFA2  0E01               	movlw	1
   208  00FFA4  5803               	subwfb	(main@i+2)^(0+1280),w,c
   209  00FFA6  A0D8               	btfss	status,0,c
   210  00FFA8  EFD8  F07F         	goto	u31
   211  00FFAC  EFDA  F07F         	goto	u30
   212  00FFB0                     u31:
   213  00FFB0  EFC4  F07F         	goto	l64
   214  00FFB4                     u30:
   215  00FFB4                     
   216                           ;main.c: 142:         LATCbits.LATC3 = 0;
   217  00FFB4  96C0               	bcf	192,3,c	;volatile
   218                           
   219                           ;main.c: 143:         LATCbits.LATC4 = 0;
   220  00FFB6  98C0               	bcf	192,4,c	;volatile
   221  00FFB8                     
   222                           ;main.c: 144:         for (uint32_t i = 0; i < 100000; i++) __nop();
   223  00FFB8  0E00               	movlw	0
   224  00FFBA  6E05               	movwf	main@i_293^(0+1280),c
   225  00FFBC  0E00               	movlw	0
   226  00FFBE  6E06               	movwf	(main@i_293+1)^(0+1280),c
   227  00FFC0  0E00               	movlw	0
   228  00FFC2  6E07               	movwf	(main@i_293+2)^(0+1280),c
   229  00FFC4  0E00               	movlw	0
   230  00FFC6  6E08               	movwf	(main@i_293+3)^(0+1280),c
   231  00FFC8                     l66:
   232  00FFC8  F000               	nop	
   233  00FFCA  0E01               	movlw	1
   234  00FFCC  2605               	addwf	main@i_293^(0+1280),f,c
   235  00FFCE  0E00               	movlw	0
   236  00FFD0  2206               	addwfc	(main@i_293+1)^(0+1280),f,c
   237  00FFD2  2207               	addwfc	(main@i_293+2)^(0+1280),f,c
   238  00FFD4  2208               	addwfc	(main@i_293+3)^(0+1280),f,c
   239  00FFD6  5008               	movf	(main@i_293+3)^(0+1280),w,c
   240  00FFD8  E10D               	bnz	u40
   241  00FFDA  0EA0               	movlw	160
   242  00FFDC  5C05               	subwf	main@i_293^(0+1280),w,c
   243  00FFDE  0E86               	movlw	134
   244  00FFE0  5806               	subwfb	(main@i_293+1)^(0+1280),w,c
   245  00FFE2  0E01               	movlw	1
   246  00FFE4  5807               	subwfb	(main@i_293+2)^(0+1280),w,c
   247  00FFE6  A0D8               	btfss	status,0,c
   248  00FFE8  EFF8  F07F         	goto	u41
   249  00FFEC  EFFA  F07F         	goto	u40
   250  00FFF0                     u41:
   251  00FFF0  EFE4  F07F         	goto	l66
   252  00FFF4                     u40:
   253  00FFF4  EFAE  F07F         	goto	l61
   254  00FFF8  EFFE  F07F         	goto	start
   255  00FFFC                     __end_of_main:
   256                           	callstack 0
   257                           
   258 ;; *************** function _uart1_read *****************
   259 ;; Defined at:
   260 ;;		line 112 in file "main.c"
   261 ;; Parameters:    Size  Location     Type
   262 ;;		None
   263 ;; Auto vars:     Size  Location     Type
   264 ;;		None
   265 ;; Return value:  Size  Location     Type
   266 ;;                  1    wreg      unsigned char 
   267 ;; Registers used:
   268 ;;		wreg, status,2
   269 ;; Tracked objects:
   270 ;;		On entry : 0/0
   271 ;;		On exit  : 0/0
   272 ;;		Unchanged: 0/0
   273 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   278 ;;Total ram usage:        0 bytes
   279 ;; Hardware stack levels used: 1
   280 ;; This function calls:
   281 ;;		Nothing
   282 ;; This function is called by:
   283 ;;		_main
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           	psect	text1
   288  00FEE0                     __ptext1:
   289                           	callstack 0
   290  00FEE0                     _uart1_read:
   291                           	callstack 127
   292  00FEE0                     l53:
   293  00FEE0  A0B7               	btfss	183,0,c	;volatile
   294  00FEE2  EF75  F07F         	goto	u11
   295  00FEE6  EF77  F07F         	goto	u10
   296  00FEEA                     u11:
   297  00FEEA  EF70  F07F         	goto	l53
   298  00FEEE                     u10:
   299  00FEEE                     
   300                           ;main.c: 117:     return U1RXB;
   301  00FEEE  0102               	movlb	2	; () banked
   302  00FEF0  51A1               	movf	161,w,b	;volatile
   303  00FEF2                     
   304                           ; BSR set to: 2
   305  00FEF2  0012               	return		;funcret
   306  00FEF4                     __end_of_uart1_read:
   307                           	callstack 0
   308                           
   309 ;; *************** function _uart1_init *****************
   310 ;; Defined at:
   311 ;;		line 85 in file "main.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;		None
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, status,2
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   329 ;;Total ram usage:        0 bytes
   330 ;; Hardware stack levels used: 1
   331 ;; This function calls:
   332 ;;		Nothing
   333 ;; This function is called by:
   334 ;;		_main
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338                           	psect	text2
   339  00FF16                     __ptext2:
   340                           	callstack 0
   341  00FF16                     _uart1_init:
   342                           	callstack 127
   343  00FF16                     
   344                           ;main.c: 88:     U1CON0 = 0xB8;
   345  00FF16  0EB8               	movlw	184
   346  00FF18  0102               	movlb	2	; () banked
   347  00FF1A  6FAB               	movwf	171,b	;volatile
   348                           
   349                           ;main.c: 90:     U1CON1 = 0x80;
   350  00FF1C  0E80               	movlw	128
   351  00FF1E  6FAC               	movwf	172,b	;volatile
   352                           
   353                           ;main.c: 92:     U1CON2 = 0x00;
   354  00FF20  0E00               	movlw	0
   355  00FF22  6FAD               	movwf	173,b	;volatile
   356                           
   357                           ;main.c: 94:     U1BRGL = 0x0F;
   358  00FF24  0E0F               	movlw	15
   359  00FF26  6FAE               	movwf	174,b	;volatile
   360                           
   361                           ;main.c: 96:     U1BRGH = 0x00;
   362  00FF28  0E00               	movlw	0
   363  00FF2A  6FAF               	movwf	175,b	;volatile
   364                           
   365                           ;main.c: 98:     U1FIFO = 0x00;
   366  00FF2C  0E00               	movlw	0
   367  00FF2E  6FB0               	movwf	176,b	;volatile
   368                           
   369                           ;main.c: 100:     U1UIR = 0x00;
   370  00FF30  0E00               	movlw	0
   371  00FF32  6FB1               	movwf	177,b	;volatile
   372                           
   373                           ;main.c: 102:     U1ERRIR = 0x00;
   374  00FF34  0E00               	movlw	0
   375  00FF36  6FB2               	movwf	178,b	;volatile
   376                           
   377                           ;main.c: 104:     U1ERRIE = 0x00;
   378  00FF38  0E00               	movlw	0
   379  00FF3A  6FB3               	movwf	179,b	;volatile
   380                           
   381                           ;main.c: 106:     U1RXPPSbits.PORT = 0b010;
   382  00FF3C  5172               	movf	114,w,b	;volatile
   383  00FF3E  0BC7               	andlw	-57
   384  00FF40  0910               	iorlw	16
   385  00FF42  6F72               	movwf	114,b	;volatile
   386                           
   387                           ;main.c: 107:     U1RXPPSbits.PIN = 0;
   388  00FF44  0EF8               	movlw	-8
   389  00FF46  1772               	andwf	114,f,b	;volatile
   390  00FF48                     
   391                           ; BSR set to: 2
   392                           ;main.c: 109:     INTCON0bits.GIE = 0;
   393  00FF48  9ED6               	bcf	214,7,c	;volatile
   394  00FF4A                     
   395                           ; BSR set to: 2
   396  00FF4A  0012               	return		;funcret
   397  00FF4C                     __end_of_uart1_init:
   398                           	callstack 0
   399                           
   400 ;; *************** function _cmp1_init *****************
   401 ;; Defined at:
   402 ;;		line 55 in file "main.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, status,2
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   420 ;;Total ram usage:        0 bytes
   421 ;; Hardware stack levels used: 1
   422 ;; This function calls:
   423 ;;		Nothing
   424 ;; This function is called by:
   425 ;;		_main
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           	psect	text3
   430  00FEF4                     __ptext3:
   431                           	callstack 0
   432  00FEF4                     _cmp1_init:
   433                           	callstack 127
   434  00FEF4                     
   435                           ;main.c: 60:     CM1CON0bits.C1HYS = 1;
   436  00FEF4  0100               	movlb	0	; () banked
   437  00FEF6  8370               	bsf	112,1,b	;volatile
   438  00FEF8                     
   439                           ; BSR set to: 0
   440                           ;main.c: 68:     CM1NCH = 0;
   441  00FEF8  0E00               	movlw	0
   442  00FEFA  6F72               	movwf	114,b	;volatile
   443                           
   444                           ;main.c: 70:     CM1PCH = 0;
   445  00FEFC  0E00               	movlw	0
   446  00FEFE  6F73               	movwf	115,b	;volatile
   447  00FF00                     
   448                           ; BSR set to: 0
   449                           ;main.c: 72:     TRISAbits.TRISA0 = 1;
   450  00FF00  80C6               	bsf	198,0,c	;volatile
   451  00FF02                     
   452                           ; BSR set to: 0
   453                           ;main.c: 73:     TRISAbits.TRISA1 = 1;
   454  00FF02  82C6               	bsf	198,1,c	;volatile
   455  00FF04                     
   456                           ; BSR set to: 0
   457                           ;main.c: 75:     ANSELAbits.ANSELA0 = 1;
   458  00FF04  0104               	movlb	4	; () banked
   459  00FF06  8100               	bsf	0,0,b	;volatile
   460  00FF08                     
   461                           ; BSR set to: 4
   462                           ;main.c: 76:     ANSELAbits.ANSELA1 = 1;
   463  00FF08  8300               	bsf	0,1,b	;volatile
   464                           
   465                           ;main.c: 78:     RA2PPS = 0x19;
   466  00FF0A  0E19               	movlw	25
   467  00FF0C  0102               	movlb	2	; () banked
   468  00FF0E  6F03               	movwf	3,b	;volatile
   469  00FF10                     
   470                           ; BSR set to: 2
   471                           ;main.c: 80:     CM1CON0bits.C1EN = 1;
   472  00FF10  0100               	movlb	0	; () banked
   473  00FF12  8F70               	bsf	112,7,b	;volatile
   474  00FF14                     
   475                           ; BSR set to: 0
   476  00FF14  0012               	return		;funcret
   477  00FF16                     __end_of_cmp1_init:
   478                           	callstack 0
   479  0000                     
   480                           	psect	rparam
   481  0000                     
   482                           	psect	idloc
   483                           
   484                           ;Config register IDLOC0 @ 0x200000
   485                           ;	unspecified, using default values
   486  200000                     	org	2097152
   487  200000  0FFF               	dw	4095
   488                           
   489                           ;Config register IDLOC1 @ 0x200002
   490                           ;	unspecified, using default values
   491  200002                     	org	2097154
   492  200002  0FFF               	dw	4095
   493                           
   494                           ;Config register IDLOC2 @ 0x200004
   495                           ;	unspecified, using default values
   496  200004                     	org	2097156
   497  200004  0FFF               	dw	4095
   498                           
   499                           ;Config register IDLOC3 @ 0x200006
   500                           ;	unspecified, using default values
   501  200006                     	org	2097158
   502  200006  0FFF               	dw	4095
   503                           
   504                           ;Config register IDLOC4 @ 0x200008
   505                           ;	unspecified, using default values
   506  200008                     	org	2097160
   507  200008  0FFF               	dw	4095
   508                           
   509                           ;Config register IDLOC5 @ 0x20000A
   510                           ;	unspecified, using default values
   511  20000A                     	org	2097162
   512  20000A  0FFF               	dw	4095
   513                           
   514                           ;Config register IDLOC6 @ 0x20000C
   515                           ;	unspecified, using default values
   516  20000C                     	org	2097164
   517  20000C  0FFF               	dw	4095
   518                           
   519                           ;Config register IDLOC7 @ 0x20000E
   520                           ;	unspecified, using default values
   521  20000E                     	org	2097166
   522  20000E  0FFF               	dw	4095
   523                           
   524                           ;Config register IDLOC8 @ 0x200010
   525                           ;	unspecified, using default values
   526  200010                     	org	2097168
   527  200010  0FFF               	dw	4095
   528                           
   529                           ;Config register IDLOC9 @ 0x200012
   530                           ;	unspecified, using default values
   531  200012                     	org	2097170
   532  200012  0FFF               	dw	4095
   533                           
   534                           ;Config register IDLOC10 @ 0x200014
   535                           ;	unspecified, using default values
   536  200014                     	org	2097172
   537  200014  0FFF               	dw	4095
   538                           
   539                           ;Config register IDLOC11 @ 0x200016
   540                           ;	unspecified, using default values
   541  200016                     	org	2097174
   542  200016  0FFF               	dw	4095
   543                           
   544                           ;Config register IDLOC12 @ 0x200018
   545                           ;	unspecified, using default values
   546  200018                     	org	2097176
   547  200018  0FFF               	dw	4095
   548                           
   549                           ;Config register IDLOC13 @ 0x20001A
   550                           ;	unspecified, using default values
   551  20001A                     	org	2097178
   552  20001A  0FFF               	dw	4095
   553                           
   554                           ;Config register IDLOC14 @ 0x20001C
   555                           ;	unspecified, using default values
   556  20001C                     	org	2097180
   557  20001C  0FFF               	dw	4095
   558                           
   559                           ;Config register IDLOC15 @ 0x20001E
   560                           ;	unspecified, using default values
   561  20001E                     	org	2097182
   562  20001E  0FFF               	dw	4095
   563                           
   564                           	psect	config
   565                           
   566                           ;Config register CONFIG1 @ 0x300000
   567                           ;	External Oscillator Selection
   568                           ;	FEXTOSC = OFF, Oscillator not enabled
   569                           ;	Reset Oscillator Selection
   570                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
   571  300000                     	org	3145728
   572  300000  8C                 	db	140
   573                           
   574                           ;Config register CONFIG2 @ 0x300001
   575                           ;	Clock out Enable bit
   576                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   577                           ;	PRLOCKED One-Way Set Enable bit
   578                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
   579                           ;	Clock Switch Enable bit
   580                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   581                           ;	Fail-Safe Clock Monitor Enable bit
   582                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   583                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
   584                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
   585                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
   586                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
   587  300001                     	org	3145729
   588  300001  FF                 	db	255
   589                           
   590                           ;Config register CONFIG3 @ 0x300002
   591                           ;	MCLR Enable bit
   592                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
   593                           ;	Power-up timer selection bits
   594                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   595                           ;	Multi-vector enable bit
   596                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
   597                           ;	IVTLOCK bit One-way set enable bit
   598                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
   599                           ;	Low Power BOR Enable bit
   600                           ;	LPBOREN = OFF, Low-Power BOR disabled
   601                           ;	Brown-out Reset Enable bits
   602                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
   603  300002                     	org	3145730
   604  300002  FF                 	db	255
   605                           
   606                           ;Config register CONFIG4 @ 0x300003
   607                           ;	Brown-out Reset Voltage Selection bits
   608                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
   609                           ;	ZCD Disable bit
   610                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
   611                           ;	PPSLOCK bit One-Way Set Enable bit
   612                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
   613                           ;	Stack Full/Underflow Reset Enable bit
   614                           ;	STVREN = ON, Stack full/underflow will cause Reset
   615                           ;	Low Voltage Programming Enable bit
   616                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
   617                           ;	Extended Instruction Set Enable bit
   618                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
   619  300003                     	org	3145731
   620  300003  FF                 	db	255
   621                           
   622                           ;Config register CONFIG5 @ 0x300004
   623                           ;	WDT Period selection bits
   624                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   625                           ;	WDT operating mode
   626                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
   627  300004                     	org	3145732
   628  300004  9F                 	db	159
   629                           
   630                           ;Config register CONFIG6 @ 0x300005
   631                           ;	WDT Window Select bits
   632                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
   633                           ;	WDT input clock selector
   634                           ;	WDTCCS = SC, Software Control
   635  300005                     	org	3145733
   636  300005  FF                 	db	255
   637                           
   638                           ;Config register CONFIG7 @ 0x300006
   639                           ;	Boot Block Size selection bits
   640                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
   641                           ;	Boot Block enable bit
   642                           ;	BBEN = OFF, Boot block disabled
   643                           ;	Storage Area Flash enable bit
   644                           ;	SAFEN = OFF, SAF disabled
   645                           ;	Background Debugger
   646                           ;	DEBUG = OFF, Background Debugger disabled
   647  300006                     	org	3145734
   648  300006  FF                 	db	255
   649                           
   650                           ;Config register CONFIG8 @ 0x300007
   651                           ;	Boot Block Write Protection bit
   652                           ;	WRTB = OFF, Boot Block not Write protected
   653                           ;	Configuration Register Write Protection bit
   654                           ;	WRTC = OFF, Configuration registers not Write protected
   655                           ;	Data EEPROM Write Protection bit
   656                           ;	WRTD = OFF, Data EEPROM not Write protected
   657                           ;	SAF Write protection bit
   658                           ;	WRTSAF = OFF, SAF not Write Protected
   659                           ;	Application Block write protection bit
   660                           ;	WRTAPP = OFF, Application Block not write protected
   661  300007                     	org	3145735
   662  300007  FF                 	db	255
   663                           
   664                           ;Config register CONFIG9 @ 0x300008
   665                           ;	PFM and Data EEPROM Code Protection bit
   666                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
   667  300008                     	org	3145736
   668  300008  FF                 	db	255
   669                           
   670                           ; Padding undefined space
   671  300009                     	org	3145737
   672  300009  FF                 	db	255
   673                           tosu	equ	0x4FF
   674                           tosh	equ	0x4FE
   675                           tosl	equ	0x4FD
   676                           stkptr	equ	0x4FC
   677                           pclatu	equ	0x4FB
   678                           pclath	equ	0x4FA
   679                           pcl	equ	0x4F9
   680                           tblptru	equ	0x4F8
   681                           tblptrh	equ	0x4F7
   682                           tblptrl	equ	0x4F6
   683                           tablat	equ	0x4F5
   684                           prodh	equ	0x4F4
   685                           prodl	equ	0x4F3
   686                           indf0	equ	0x4EF
   687                           postinc0	equ	0x4EE
   688                           postdec0	equ	0x4ED
   689                           preinc0	equ	0x4EC
   690                           plusw0	equ	0x4EB
   691                           fsr0h	equ	0x4EA
   692                           fsr0l	equ	0x4E9
   693                           wreg	equ	0x4E8
   694                           indf1	equ	0x4E7
   695                           postinc1	equ	0x4E6
   696                           postdec1	equ	0x4E5
   697                           preinc1	equ	0x4E4
   698                           plusw1	equ	0x4E3
   699                           fsr1h	equ	0x4E2
   700                           fsr1l	equ	0x4E1
   701                           bsr	equ	0x4E0
   702                           indf2	equ	0x4DF
   703                           postinc2	equ	0x4DE
   704                           postdec2	equ	0x4DD
   705                           preinc2	equ	0x4DC
   706                           plusw2	equ	0x4DB
   707                           fsr2h	equ	0x4DA
   708                           fsr2l	equ	0x4D9
   709                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8       8
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0      60
                                              0 COMRAM     8     8      0
                          _cmp1_init
                         _uart1_init
                         _uart1_read
 ---------------------------------------------------------------------------------
 (1) _uart1_read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uart1_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cmp1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmp1_init
   _uart1_init
   _uart1_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             200      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      8       8       1        8.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BIGRAM            10FF      0       0      38        0.0%
BITBIGSFRhhhh       29      0       0      39        0.0%
BITBIGSFRhhhlh       D      0       0      40        0.0%
BITBIGSFRhhhll       1      0       0      41        0.0%
BITBIGSFRhhlhhh      5      0       0      42        0.0%
BITBIGSFRhhlhhl      8      0       0      43        0.0%
BITBIGSFRhhlhl      B6      0       0      44        0.0%
BITBIGSFRhhllhh    14C      0       0      45        0.0%
BITBIGSFRhhllhl      9      0       0      46        0.0%
BITBIGSFRhhllhl     2E      0       0      47        0.0%
BITBIGSFRhhllhl     6E      0       0      48        0.0%
BITBIGSFRhhlll     18F      0       0      49        0.0%
BITBIGSFRhl          1      0       0      50        0.0%
BITBIGSFRl          70      0       0      51        0.0%
ABS                  0      0       0      52        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat May 28 18:09:02 2022

                     l50 FF4A                       l53 FEE0                       l61 FF5C  
                     l62 FF76                       l47 FF14                       l56 FEF2  
                     l64 FF88                       l65 FFB4                       l66 FFC8  
                     u10 FEEE                       u11 FEEA                       u20 FF70  
                     u21 FF6C                       u30 FFB4                       u31 FFB0  
                     u40 FFF4                       u41 FFF0                      l750 FF00  
                    l752 FF02                      l760 FF16                      l754 FF04  
                    l746 FEF4                      l762 FF48                      l770 FF4C  
                    l756 FF08                      l748 FEF8                      l764 FEE0  
                    l772 FF54                      l758 FF10                      l766 FEEE  
                    l790 FFCA                      l782 FF8A                      l774 FF70  
                    l784 FFB8                      l776 FF78                     _main FF4C  
                   start FFFC             ___param_bank 000000                    ?_main 0501  
                  _U1UIR 0002B1                    _U1RXB 0002A1                    main@i 0501  
                  status 0004D8          __initialization FEDA             __end_of_main FFFC  
                 ??_main 0501            __activetblptr 000000                   _CM1NCH 000072  
                 _CM1PCH 000073                   _U1CON0 0002AB                   _U1CON1 0002AC  
                 _U1CON2 0002AD                   _U1BRGH 0002AF                   _U1FIFO 0002B0  
                 _U1BRGL 0002AE                   _RA2PPS 000203                   isa$std 000001  
             __accesstop 0560  __end_of__initialization FEDA            ___rparam_used 000001  
         __pcstackCOMRAM 0501                  _U1ERRIE 0002B3                  _U1ERRIR 0002B2  
      __end_of_cmp1_init FF16                  __Hparam 0000                  __Lparam 0000  
                __pcinit FEDA                  __ramtop 1600                  __ptext0 FF4C  
                __ptext1 FEE0                  __ptext2 FF16                  __ptext3 FEF4  
   end_of_initialization FEDA               _uart1_init FF16               _uart1_read FEE0  
              _TRISAbits 0004C6                _TRISCbits 0004C8              _CM1CON0bits 000070  
    start_initialization FEDA              ?_uart1_init 0501              ?_uart1_read 0501  
              _cmp1_init FEF4               ?_cmp1_init 0501                 _LATCbits 0004C0  
               _PIR4bits 0004B7                main@i_293 0505              _INTCON0bits 0004D6  
            _U1RXPPSbits 000272                 __Hrparam 0000                 __Lrparam 0000  
             _ANSELAbits 000400             ??_uart1_init 0501              ??_cmp1_init 0501  
           ??_uart1_read 0501                 isa$xinst 000000       __end_of_uart1_init FF4C  
     __end_of_uart1_read FEF4  
