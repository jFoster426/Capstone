

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jul 14 19:30:15 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F16Q40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
     9                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    12  0000                     
    13                           ; Version 2.36
    14                           ; Generated 28/01/2022 GMT
    15                           ; 
    16                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F16Q40 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _CM1CON0bits	set	112
    49  0000                     _CM1NCH	set	114
    50  0000                     _RA2PPS	set	515
    51  0000                     _ANSELAbits	set	1024
    52  0000                     _TRISAbits	set	1222
    53  0000                     _CM1PCH	set	115
    54  0000                     _PORTBbits	set	1231
    55  0000                     _TRISCbits	set	1224
    56  0000                     _TRISBbits	set	1223
    57  0000                     _INTCON0bits	set	1238
    58  0000                     _ANSELBbits	set	1032
    59  0000                     _PIR4bits	set	1207
    60  0000                     _U1RXPPSbits	set	626
    61  0000                     _U1CON0	set	683
    62  0000                     _U1ERRIE	set	691
    63  0000                     _U1ERRIR	set	690
    64  0000                     _U1UIR	set	689
    65  0000                     _U1FIFO	set	688
    66  0000                     _U1BRGH	set	687
    67  0000                     _U1BRGL	set	686
    68  0000                     _U1CON2	set	685
    69  0000                     _U1CON1	set	684
    70  0000                     _U1RXB	set	673
    71  0000                     _LATBbits	set	1215
    72  0000                     _LATCbits	set	1216
    73                           
    74                           ; #config settings
    75                           
    76                           	psect	cinit
    77  00FDFA                     __pcinit:
    78                           	callstack 0
    79  00FDFA                     start_initialization:
    80                           	callstack 0
    81  00FDFA                     __initialization:
    82                           	callstack 0
    83  00FDFA                     end_of_initialization:
    84                           	callstack 0
    85  00FDFA                     __end_of__initialization:
    86                           	callstack 0
    87  00FDFA  0100               	movlb	0
    88  00FDFC  EF00  F07F         	goto	_main	;jump to C main() function
    89                           
    90                           	psect	cstackCOMRAM
    91  000501                     __pcstackCOMRAM:
    92                           	callstack 0
    93  000501                     main@i:
    94                           	callstack 0
    95                           
    96                           ; 4 bytes @ 0x0
    97  000501                     	ds	4
    98  000505                     main@i_370:
    99                           	callstack 0
   100                           
   101                           ; 4 bytes @ 0x4
   102  000505                     	ds	4
   103  000509                     main@i_371:
   104                           	callstack 0
   105                           
   106                           ; 4 bytes @ 0x8
   107  000509                     	ds	4
   108  00050D                     main@i_372:
   109                           	callstack 0
   110                           
   111                           ; 4 bytes @ 0xC
   112  00050D                     	ds	4
   113  000511                     main@i_373:
   114                           	callstack 0
   115                           
   116                           ; 4 bytes @ 0x10
   117  000511                     	ds	4
   118                           
   119 ;;
   120 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   121 ;;
   122 ;; *************** function _main *****************
   123 ;; Defined at:
   124 ;;		line 120 in file "main.c"
   125 ;; Parameters:    Size  Location     Type
   126 ;;		None
   127 ;; Auto vars:     Size  Location     Type
   128 ;;  i               4   16[COMRAM] volatile unsigned long 
   129 ;;  i               4   12[COMRAM] volatile unsigned long 
   130 ;;  i               4    8[COMRAM] volatile unsigned long 
   131 ;;  i               4    4[COMRAM] volatile unsigned long 
   132 ;;  i               4    0[COMRAM] volatile unsigned long 
   133 ;; Return value:  Size  Location     Type
   134 ;;                  1    wreg      void 
   135 ;; Registers used:
   136 ;;		wreg, status,2, status,0
   137 ;; Tracked objects:
   138 ;;		On entry : 0/0
   139 ;;		On exit  : 0/0
   140 ;;		Unchanged: 0/0
   141 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   143 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   145 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   146 ;;Total ram usage:       20 bytes
   147 ;; This function calls:
   148 ;;		Nothing
   149 ;; This function is called by:
   150 ;;		Startup code after reset
   151 ;; This function uses a non-reentrant model
   152 ;;
   153                           
   154                           	psect	text0
   155  00FE00                     __ptext0:
   156                           	callstack 0
   157  00FE00                     _main:
   158                           	callstack 127
   159  00FE00                     
   160                           ;main.c: 123:     TRISBbits.TRISB4 = 0;
   161  00FE00  98C7               	bcf	199,4,c	;volatile
   162                           
   163                           ;main.c: 126:     TRISCbits.TRISC7 = 0;
   164  00FE02  9EC8               	bcf	200,7,c	;volatile
   165                           
   166                           ;main.c: 127:     LATCbits.LATC7 = 1;
   167  00FE04  8EC0               	bsf	192,7,c	;volatile
   168                           
   169                           ;main.c: 130:     TRISBbits.TRISB5 = 0;
   170  00FE06  9AC7               	bcf	199,5,c	;volatile
   171                           
   172                           ;main.c: 131:     LATBbits.LATB5 = 1;
   173  00FE08  8ABF               	bsf	191,5,c	;volatile
   174                           
   175                           ;main.c: 134:     ANSELBbits.ANSELB7 = 0;
   176  00FE0A  0104               	movlb	4	; () banked
   177  00FE0C  9F08               	bcf	8,7,b	;volatile
   178                           
   179                           ;main.c: 135:     TRISBbits.TRISB7 = 1;
   180  00FE0E  8EC7               	bsf	199,7,c	;volatile
   181  00FE10                     
   182                           ; BSR set to: 4
   183                           ;main.c: 137:     for (volatile uint32_t i = 0; i < 500000; i++) __nop();
   184  00FE10  0E00               	movlw	0
   185  00FE12  6E01               	movwf	main@i^(0+1280),c	;volatile
   186  00FE14  0E00               	movlw	0
   187  00FE16  6E02               	movwf	(main@i+1)^(0+1280),c	;volatile
   188  00FE18  0E00               	movlw	0
   189  00FE1A  6E03               	movwf	(main@i+2)^(0+1280),c	;volatile
   190  00FE1C  0E00               	movlw	0
   191  00FE1E  6E04               	movwf	(main@i+3)^(0+1280),c	;volatile
   192  00FE20                     
   193                           ; BSR set to: 4
   194  00FE20  5004               	movf	(main@i+3)^(0+1280),w,c	;volatile
   195  00FE22  E10D               	bnz	u20
   196  00FE24  0E20               	movlw	32
   197  00FE26  5C01               	subwf	main@i^(0+1280),w,c	;volatile
   198  00FE28  0EA1               	movlw	161
   199  00FE2A  5802               	subwfb	(main@i+1)^(0+1280),w,c	;volatile
   200  00FE2C  0E07               	movlw	7
   201  00FE2E  5803               	subwfb	(main@i+2)^(0+1280),w,c	;volatile
   202  00FE30  A0D8               	btfss	status,0,c
   203  00FE32  EF1D  F07F         	goto	u21
   204  00FE36  EF1F  F07F         	goto	u20
   205  00FE3A                     u21:
   206  00FE3A  EF21  F07F         	goto	l69
   207  00FE3E                     u20:
   208  00FE3E  EF37  F07F         	goto	l71
   209  00FE42                     l69:
   210  00FE42  F000               	nop	
   211  00FE44  0E01               	movlw	1
   212  00FE46  2601               	addwf	main@i^(0+1280),f,c	;volatile
   213  00FE48  0E00               	movlw	0
   214  00FE4A  2202               	addwfc	(main@i+1)^(0+1280),f,c	;volatile
   215  00FE4C  2203               	addwfc	(main@i+2)^(0+1280),f,c	;volatile
   216  00FE4E  2204               	addwfc	(main@i+3)^(0+1280),f,c	;volatile
   217  00FE50  5004               	movf	(main@i+3)^(0+1280),w,c	;volatile
   218  00FE52  E10D               	bnz	u30
   219  00FE54  0E20               	movlw	32
   220  00FE56  5C01               	subwf	main@i^(0+1280),w,c	;volatile
   221  00FE58  0EA1               	movlw	161
   222  00FE5A  5802               	subwfb	(main@i+1)^(0+1280),w,c	;volatile
   223  00FE5C  0E07               	movlw	7
   224  00FE5E  5803               	subwfb	(main@i+2)^(0+1280),w,c	;volatile
   225  00FE60  A0D8               	btfss	status,0,c
   226  00FE62  EF35  F07F         	goto	u31
   227  00FE66  EF37  F07F         	goto	u30
   228  00FE6A                     u31:
   229  00FE6A  EF21  F07F         	goto	l69
   230  00FE6E                     u30:
   231  00FE6E                     l71:
   232                           
   233                           ;main.c: 140:     {;main.c: 141:         if (PORTBbits.RB7 == 1)
   234  00FE6E  AECF               	btfss	207,7,c	;volatile
   235  00FE70  EF3C  F07F         	goto	u41
   236  00FE74  EF3E  F07F         	goto	u40
   237  00FE78                     u41:
   238  00FE78  EF9C  F07F         	goto	l72
   239  00FE7C                     u40:
   240  00FE7C                     
   241                           ;main.c: 142:         {;main.c: 143:             LATBbits.LATB4 = 1;
   242  00FE7C  88BF               	bsf	191,4,c	;volatile
   243  00FE7E                     
   244                           ;main.c: 144:             for (volatile uint32_t i = 0; i < 50000; i++) __nop();
   245  00FE7E  0E00               	movlw	0
   246  00FE80  6E05               	movwf	main@i_370^(0+1280),c	;volatile
   247  00FE82  0E00               	movlw	0
   248  00FE84  6E06               	movwf	(main@i_370+1)^(0+1280),c	;volatile
   249  00FE86  0E00               	movlw	0
   250  00FE88  6E07               	movwf	(main@i_370+2)^(0+1280),c	;volatile
   251  00FE8A  0E00               	movlw	0
   252  00FE8C  6E08               	movwf	(main@i_370+3)^(0+1280),c	;volatile
   253  00FE8E  5008               	movf	(main@i_370+3)^(0+1280),w,c	;volatile
   254  00FE90  1007               	iorwf	(main@i_370+2)^(0+1280),w,c	;volatile
   255  00FE92  E10B               	bnz	u50
   256  00FE94  0E50               	movlw	80
   257  00FE96  5C05               	subwf	main@i_370^(0+1280),w,c	;volatile
   258  00FE98  0EC3               	movlw	195
   259  00FE9A  5806               	subwfb	(main@i_370+1)^(0+1280),w,c	;volatile
   260  00FE9C  A0D8               	btfss	status,0,c
   261  00FE9E  EF53  F07F         	goto	u51
   262  00FEA2  EF55  F07F         	goto	u50
   263  00FEA6                     u51:
   264  00FEA6  EF57  F07F         	goto	l73
   265  00FEAA                     u50:
   266  00FEAA  EF6C  F07F         	goto	l74
   267  00FEAE                     l73:
   268  00FEAE  F000               	nop	
   269  00FEB0  0E01               	movlw	1
   270  00FEB2  2605               	addwf	main@i_370^(0+1280),f,c	;volatile
   271  00FEB4  0E00               	movlw	0
   272  00FEB6  2206               	addwfc	(main@i_370+1)^(0+1280),f,c	;volatile
   273  00FEB8  2207               	addwfc	(main@i_370+2)^(0+1280),f,c	;volatile
   274  00FEBA  2208               	addwfc	(main@i_370+3)^(0+1280),f,c	;volatile
   275  00FEBC  5008               	movf	(main@i_370+3)^(0+1280),w,c	;volatile
   276  00FEBE  1007               	iorwf	(main@i_370+2)^(0+1280),w,c	;volatile
   277  00FEC0  E10B               	bnz	u60
   278  00FEC2  0E50               	movlw	80
   279  00FEC4  5C05               	subwf	main@i_370^(0+1280),w,c	;volatile
   280  00FEC6  0EC3               	movlw	195
   281  00FEC8  5806               	subwfb	(main@i_370+1)^(0+1280),w,c	;volatile
   282  00FECA  A0D8               	btfss	status,0,c
   283  00FECC  EF6A  F07F         	goto	u61
   284  00FED0  EF6C  F07F         	goto	u60
   285  00FED4                     u61:
   286  00FED4  EF57  F07F         	goto	l73
   287  00FED8                     u60:
   288  00FED8                     l74:
   289                           
   290                           ;main.c: 145:             LATBbits.LATB4 = 0;
   291  00FED8  98BF               	bcf	191,4,c	;volatile
   292  00FEDA                     
   293                           ;main.c: 146:             for (volatile uint32_t i = 0; i < 50000; i++) __nop();
   294  00FEDA  0E00               	movlw	0
   295  00FEDC  6E09               	movwf	main@i_371^(0+1280),c	;volatile
   296  00FEDE  0E00               	movlw	0
   297  00FEE0  6E0A               	movwf	(main@i_371+1)^(0+1280),c	;volatile
   298  00FEE2  0E00               	movlw	0
   299  00FEE4  6E0B               	movwf	(main@i_371+2)^(0+1280),c	;volatile
   300  00FEE6  0E00               	movlw	0
   301  00FEE8  6E0C               	movwf	(main@i_371+3)^(0+1280),c	;volatile
   302  00FEEA  500C               	movf	(main@i_371+3)^(0+1280),w,c	;volatile
   303  00FEEC  100B               	iorwf	(main@i_371+2)^(0+1280),w,c	;volatile
   304  00FEEE  E10B               	bnz	u70
   305  00FEF0  0E50               	movlw	80
   306  00FEF2  5C09               	subwf	main@i_371^(0+1280),w,c	;volatile
   307  00FEF4  0EC3               	movlw	195
   308  00FEF6  580A               	subwfb	(main@i_371+1)^(0+1280),w,c	;volatile
   309  00FEF8  A0D8               	btfss	status,0,c
   310  00FEFA  EF81  F07F         	goto	u71
   311  00FEFE  EF83  F07F         	goto	u70
   312  00FF02                     u71:
   313  00FF02  EF85  F07F         	goto	l75
   314  00FF06                     u70:
   315  00FF06  EF37  F07F         	goto	l71
   316  00FF0A                     l75:
   317  00FF0A  F000               	nop	
   318  00FF0C  0E01               	movlw	1
   319  00FF0E  2609               	addwf	main@i_371^(0+1280),f,c	;volatile
   320  00FF10  0E00               	movlw	0
   321  00FF12  220A               	addwfc	(main@i_371+1)^(0+1280),f,c	;volatile
   322  00FF14  220B               	addwfc	(main@i_371+2)^(0+1280),f,c	;volatile
   323  00FF16  220C               	addwfc	(main@i_371+3)^(0+1280),f,c	;volatile
   324  00FF18  500C               	movf	(main@i_371+3)^(0+1280),w,c	;volatile
   325  00FF1A  100B               	iorwf	(main@i_371+2)^(0+1280),w,c	;volatile
   326  00FF1C  E10B               	bnz	u80
   327  00FF1E  0E50               	movlw	80
   328  00FF20  5C09               	subwf	main@i_371^(0+1280),w,c	;volatile
   329  00FF22  0EC3               	movlw	195
   330  00FF24  580A               	subwfb	(main@i_371+1)^(0+1280),w,c	;volatile
   331  00FF26  A0D8               	btfss	status,0,c
   332  00FF28  EF98  F07F         	goto	u81
   333  00FF2C  EF9A  F07F         	goto	u80
   334  00FF30                     u81:
   335  00FF30  EF85  F07F         	goto	l75
   336  00FF34                     u80:
   337  00FF34  EF37  F07F         	goto	l71
   338  00FF38                     l72:
   339                           
   340                           ;main.c: 149:         {;main.c: 150:             LATCbits.LATC7 = 0;
   341  00FF38  9EC0               	bcf	192,7,c	;volatile
   342  00FF3A                     
   343                           ;main.c: 151:             for (volatile uint32_t i = 0; i < 50000; i++) __nop();
   344  00FF3A  0E00               	movlw	0
   345  00FF3C  6E0D               	movwf	main@i_372^(0+1280),c	;volatile
   346  00FF3E  0E00               	movlw	0
   347  00FF40  6E0E               	movwf	(main@i_372+1)^(0+1280),c	;volatile
   348  00FF42  0E00               	movlw	0
   349  00FF44  6E0F               	movwf	(main@i_372+2)^(0+1280),c	;volatile
   350  00FF46  0E00               	movlw	0
   351  00FF48  6E10               	movwf	(main@i_372+3)^(0+1280),c	;volatile
   352  00FF4A  5010               	movf	(main@i_372+3)^(0+1280),w,c	;volatile
   353  00FF4C  100F               	iorwf	(main@i_372+2)^(0+1280),w,c	;volatile
   354  00FF4E  E10B               	bnz	u90
   355  00FF50  0E50               	movlw	80
   356  00FF52  5C0D               	subwf	main@i_372^(0+1280),w,c	;volatile
   357  00FF54  0EC3               	movlw	195
   358  00FF56  580E               	subwfb	(main@i_372+1)^(0+1280),w,c	;volatile
   359  00FF58  A0D8               	btfss	status,0,c
   360  00FF5A  EFB1  F07F         	goto	u91
   361  00FF5E  EFB3  F07F         	goto	u90
   362  00FF62                     u91:
   363  00FF62  EFB5  F07F         	goto	l78
   364  00FF66                     u90:
   365  00FF66  EFCA  F07F         	goto	l79
   366  00FF6A                     l78:
   367  00FF6A  F000               	nop	
   368  00FF6C  0E01               	movlw	1
   369  00FF6E  260D               	addwf	main@i_372^(0+1280),f,c	;volatile
   370  00FF70  0E00               	movlw	0
   371  00FF72  220E               	addwfc	(main@i_372+1)^(0+1280),f,c	;volatile
   372  00FF74  220F               	addwfc	(main@i_372+2)^(0+1280),f,c	;volatile
   373  00FF76  2210               	addwfc	(main@i_372+3)^(0+1280),f,c	;volatile
   374  00FF78  5010               	movf	(main@i_372+3)^(0+1280),w,c	;volatile
   375  00FF7A  100F               	iorwf	(main@i_372+2)^(0+1280),w,c	;volatile
   376  00FF7C  E10B               	bnz	u100
   377  00FF7E  0E50               	movlw	80
   378  00FF80  5C0D               	subwf	main@i_372^(0+1280),w,c	;volatile
   379  00FF82  0EC3               	movlw	195
   380  00FF84  580E               	subwfb	(main@i_372+1)^(0+1280),w,c	;volatile
   381  00FF86  A0D8               	btfss	status,0,c
   382  00FF88  EFC8  F07F         	goto	u101
   383  00FF8C  EFCA  F07F         	goto	u100
   384  00FF90                     u101:
   385  00FF90  EFB5  F07F         	goto	l78
   386  00FF94                     u100:
   387  00FF94                     l79:
   388                           
   389                           ;main.c: 152:             LATCbits.LATC7 = 1;
   390  00FF94  8EC0               	bsf	192,7,c	;volatile
   391  00FF96                     
   392                           ;main.c: 153:             for (volatile uint32_t i = 0; i < 500000; i++) __nop();
   393  00FF96  0E00               	movlw	0
   394  00FF98  6E11               	movwf	main@i_373^(0+1280),c	;volatile
   395  00FF9A  0E00               	movlw	0
   396  00FF9C  6E12               	movwf	(main@i_373+1)^(0+1280),c	;volatile
   397  00FF9E  0E00               	movlw	0
   398  00FFA0  6E13               	movwf	(main@i_373+2)^(0+1280),c	;volatile
   399  00FFA2  0E00               	movlw	0
   400  00FFA4  6E14               	movwf	(main@i_373+3)^(0+1280),c	;volatile
   401  00FFA6  5014               	movf	(main@i_373+3)^(0+1280),w,c	;volatile
   402  00FFA8  E10D               	bnz	u110
   403  00FFAA  0E20               	movlw	32
   404  00FFAC  5C11               	subwf	main@i_373^(0+1280),w,c	;volatile
   405  00FFAE  0EA1               	movlw	161
   406  00FFB0  5812               	subwfb	(main@i_373+1)^(0+1280),w,c	;volatile
   407  00FFB2  0E07               	movlw	7
   408  00FFB4  5813               	subwfb	(main@i_373+2)^(0+1280),w,c	;volatile
   409  00FFB6  A0D8               	btfss	status,0,c
   410  00FFB8  EFE0  F07F         	goto	u111
   411  00FFBC  EFE2  F07F         	goto	u110
   412  00FFC0                     u111:
   413  00FFC0  EFE4  F07F         	goto	l80
   414  00FFC4                     u110:
   415  00FFC4  EF37  F07F         	goto	l71
   416  00FFC8                     l80:
   417  00FFC8  F000               	nop	
   418  00FFCA  0E01               	movlw	1
   419  00FFCC  2611               	addwf	main@i_373^(0+1280),f,c	;volatile
   420  00FFCE  0E00               	movlw	0
   421  00FFD0  2212               	addwfc	(main@i_373+1)^(0+1280),f,c	;volatile
   422  00FFD2  2213               	addwfc	(main@i_373+2)^(0+1280),f,c	;volatile
   423  00FFD4  2214               	addwfc	(main@i_373+3)^(0+1280),f,c	;volatile
   424  00FFD6  5014               	movf	(main@i_373+3)^(0+1280),w,c	;volatile
   425  00FFD8  E10D               	bnz	u120
   426  00FFDA  0E20               	movlw	32
   427  00FFDC  5C11               	subwf	main@i_373^(0+1280),w,c	;volatile
   428  00FFDE  0EA1               	movlw	161
   429  00FFE0  5812               	subwfb	(main@i_373+1)^(0+1280),w,c	;volatile
   430  00FFE2  0E07               	movlw	7
   431  00FFE4  5813               	subwfb	(main@i_373+2)^(0+1280),w,c	;volatile
   432  00FFE6  A0D8               	btfss	status,0,c
   433  00FFE8  EFF8  F07F         	goto	u121
   434  00FFEC  EFFA  F07F         	goto	u120
   435  00FFF0                     u121:
   436  00FFF0  EFE4  F07F         	goto	l80
   437  00FFF4                     u120:
   438  00FFF4  EF37  F07F         	goto	l71
   439  00FFF8  EFFE  F07F         	goto	start
   440  00FFFC                     __end_of_main:
   441                           	callstack 0
   442  0000                     
   443                           	psect	rparam
   444  0000                     
   445                           	psect	idloc
   446                           
   447                           ;Config register IDLOC0 @ 0x200000
   448                           ;	unspecified, using default values
   449  200000                     	org	2097152
   450  200000  0FFF               	dw	4095
   451                           
   452                           ;Config register IDLOC1 @ 0x200002
   453                           ;	unspecified, using default values
   454  200002                     	org	2097154
   455  200002  0FFF               	dw	4095
   456                           
   457                           ;Config register IDLOC2 @ 0x200004
   458                           ;	unspecified, using default values
   459  200004                     	org	2097156
   460  200004  0FFF               	dw	4095
   461                           
   462                           ;Config register IDLOC3 @ 0x200006
   463                           ;	unspecified, using default values
   464  200006                     	org	2097158
   465  200006  0FFF               	dw	4095
   466                           
   467                           ;Config register IDLOC4 @ 0x200008
   468                           ;	unspecified, using default values
   469  200008                     	org	2097160
   470  200008  0FFF               	dw	4095
   471                           
   472                           ;Config register IDLOC5 @ 0x20000A
   473                           ;	unspecified, using default values
   474  20000A                     	org	2097162
   475  20000A  0FFF               	dw	4095
   476                           
   477                           ;Config register IDLOC6 @ 0x20000C
   478                           ;	unspecified, using default values
   479  20000C                     	org	2097164
   480  20000C  0FFF               	dw	4095
   481                           
   482                           ;Config register IDLOC7 @ 0x20000E
   483                           ;	unspecified, using default values
   484  20000E                     	org	2097166
   485  20000E  0FFF               	dw	4095
   486                           
   487                           ;Config register IDLOC8 @ 0x200010
   488                           ;	unspecified, using default values
   489  200010                     	org	2097168
   490  200010  0FFF               	dw	4095
   491                           
   492                           ;Config register IDLOC9 @ 0x200012
   493                           ;	unspecified, using default values
   494  200012                     	org	2097170
   495  200012  0FFF               	dw	4095
   496                           
   497                           ;Config register IDLOC10 @ 0x200014
   498                           ;	unspecified, using default values
   499  200014                     	org	2097172
   500  200014  0FFF               	dw	4095
   501                           
   502                           ;Config register IDLOC11 @ 0x200016
   503                           ;	unspecified, using default values
   504  200016                     	org	2097174
   505  200016  0FFF               	dw	4095
   506                           
   507                           ;Config register IDLOC12 @ 0x200018
   508                           ;	unspecified, using default values
   509  200018                     	org	2097176
   510  200018  0FFF               	dw	4095
   511                           
   512                           ;Config register IDLOC13 @ 0x20001A
   513                           ;	unspecified, using default values
   514  20001A                     	org	2097178
   515  20001A  0FFF               	dw	4095
   516                           
   517                           ;Config register IDLOC14 @ 0x20001C
   518                           ;	unspecified, using default values
   519  20001C                     	org	2097180
   520  20001C  0FFF               	dw	4095
   521                           
   522                           ;Config register IDLOC15 @ 0x20001E
   523                           ;	unspecified, using default values
   524  20001E                     	org	2097182
   525  20001E  0FFF               	dw	4095
   526                           
   527                           ;Config register IDLOC16 @ 0x200020
   528                           ;	unspecified, using default values
   529  200020                     	org	2097184
   530  200020  0FFF               	dw	4095
   531                           
   532                           ;Config register IDLOC17 @ 0x200022
   533                           ;	unspecified, using default values
   534  200022                     	org	2097186
   535  200022  0FFF               	dw	4095
   536                           
   537                           ;Config register IDLOC18 @ 0x200024
   538                           ;	unspecified, using default values
   539  200024                     	org	2097188
   540  200024  0FFF               	dw	4095
   541                           
   542                           ;Config register IDLOC19 @ 0x200026
   543                           ;	unspecified, using default values
   544  200026                     	org	2097190
   545  200026  0FFF               	dw	4095
   546                           
   547                           ;Config register IDLOC20 @ 0x200028
   548                           ;	unspecified, using default values
   549  200028                     	org	2097192
   550  200028  0FFF               	dw	4095
   551                           
   552                           ;Config register IDLOC21 @ 0x20002A
   553                           ;	unspecified, using default values
   554  20002A                     	org	2097194
   555  20002A  0FFF               	dw	4095
   556                           
   557                           ;Config register IDLOC22 @ 0x20002C
   558                           ;	unspecified, using default values
   559  20002C                     	org	2097196
   560  20002C  0FFF               	dw	4095
   561                           
   562                           ;Config register IDLOC23 @ 0x20002E
   563                           ;	unspecified, using default values
   564  20002E                     	org	2097198
   565  20002E  0FFF               	dw	4095
   566                           
   567                           ;Config register IDLOC24 @ 0x200030
   568                           ;	unspecified, using default values
   569  200030                     	org	2097200
   570  200030  0FFF               	dw	4095
   571                           
   572                           ;Config register IDLOC25 @ 0x200032
   573                           ;	unspecified, using default values
   574  200032                     	org	2097202
   575  200032  0FFF               	dw	4095
   576                           
   577                           ;Config register IDLOC26 @ 0x200034
   578                           ;	unspecified, using default values
   579  200034                     	org	2097204
   580  200034  0FFF               	dw	4095
   581                           
   582                           ;Config register IDLOC27 @ 0x200036
   583                           ;	unspecified, using default values
   584  200036                     	org	2097206
   585  200036  0FFF               	dw	4095
   586                           
   587                           ;Config register IDLOC28 @ 0x200038
   588                           ;	unspecified, using default values
   589  200038                     	org	2097208
   590  200038  0FFF               	dw	4095
   591                           
   592                           ;Config register IDLOC29 @ 0x20003A
   593                           ;	unspecified, using default values
   594  20003A                     	org	2097210
   595  20003A  0FFF               	dw	4095
   596                           
   597                           ;Config register IDLOC30 @ 0x20003C
   598                           ;	unspecified, using default values
   599  20003C                     	org	2097212
   600  20003C  0FFF               	dw	4095
   601                           
   602                           ;Config register IDLOC31 @ 0x20003E
   603                           ;	unspecified, using default values
   604  20003E                     	org	2097214
   605  20003E  0FFF               	dw	4095
   606                           
   607                           	psect	config
   608                           
   609                           ;Config register CONFIG1 @ 0x300000
   610                           ;	External Oscillator Selection
   611                           ;	FEXTOSC = OFF, Oscillator not enabled
   612                           ;	Reset Oscillator Selection
   613                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
   614  300000                     	org	3145728
   615  300000  8C                 	db	140
   616                           
   617                           ;Config register CONFIG2 @ 0x300001
   618                           ;	Clock out Enable bit
   619                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   620                           ;	PRLOCKED One-Way Set Enable bit
   621                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
   622                           ;	Clock Switch Enable bit
   623                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   624                           ;	Fail-Safe Clock Monitor Enable bit
   625                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   626                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
   627                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
   628                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
   629                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
   630  300001                     	org	3145729
   631  300001  FF                 	db	255
   632                           
   633                           ;Config register CONFIG3 @ 0x300002
   634                           ;	MCLR Enable bit
   635                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
   636                           ;	Power-up timer selection bits
   637                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   638                           ;	Multi-vector enable bit
   639                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
   640                           ;	IVTLOCK bit One-way set enable bit
   641                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
   642                           ;	Low Power BOR Enable bit
   643                           ;	LPBOREN = OFF, Low-Power BOR disabled
   644                           ;	Brown-out Reset Enable bits
   645                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
   646  300002                     	org	3145730
   647  300002  FF                 	db	255
   648                           
   649                           ;Config register CONFIG4 @ 0x300003
   650                           ;	Brown-out Reset Voltage Selection bits
   651                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
   652                           ;	ZCD Disable bit
   653                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
   654                           ;	PPSLOCK bit One-Way Set Enable bit
   655                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
   656                           ;	Stack Full/Underflow Reset Enable bit
   657                           ;	STVREN = ON, Stack full/underflow will cause Reset
   658                           ;	Low Voltage Programming Enable bit
   659                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
   660                           ;	Extended Instruction Set Enable bit
   661                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
   662  300003                     	org	3145731
   663  300003  FF                 	db	255
   664                           
   665                           ;Config register CONFIG5 @ 0x300004
   666                           ;	WDT Period selection bits
   667                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   668                           ;	WDT operating mode
   669                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
   670  300004                     	org	3145732
   671  300004  9F                 	db	159
   672                           
   673                           ;Config register CONFIG6 @ 0x300005
   674                           ;	WDT Window Select bits
   675                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
   676                           ;	WDT input clock selector
   677                           ;	WDTCCS = SC, Software Control
   678  300005                     	org	3145733
   679  300005  FF                 	db	255
   680                           
   681                           ;Config register CONFIG7 @ 0x300006
   682                           ;	Boot Block Size selection bits
   683                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
   684                           ;	Boot Block enable bit
   685                           ;	BBEN = OFF, Boot block disabled
   686                           ;	Storage Area Flash enable bit
   687                           ;	SAFEN = OFF, SAF disabled
   688                           ;	Background Debugger
   689                           ;	DEBUG = OFF, Background Debugger disabled
   690  300006                     	org	3145734
   691  300006  FF                 	db	255
   692                           
   693                           ;Config register CONFIG8 @ 0x300007
   694                           ;	Boot Block Write Protection bit
   695                           ;	WRTB = OFF, Boot Block not Write protected
   696                           ;	Configuration Register Write Protection bit
   697                           ;	WRTC = OFF, Configuration registers not Write protected
   698                           ;	Data EEPROM Write Protection bit
   699                           ;	WRTD = OFF, Data EEPROM not Write protected
   700                           ;	SAF Write protection bit
   701                           ;	WRTSAF = OFF, SAF not Write Protected
   702                           ;	Application Block write protection bit
   703                           ;	WRTAPP = OFF, Application Block not write protected
   704  300007                     	org	3145735
   705  300007  FF                 	db	255
   706                           
   707                           ;Config register CONFIG9 @ 0x300008
   708                           ;	PFM and Data EEPROM Code Protection bit
   709                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
   710  300008                     	org	3145736
   711  300008  FF                 	db	255
   712                           
   713                           ; Padding undefined space
   714  300009                     	org	3145737
   715  300009  FF                 	db	255
   716                           tosu	equ	0x4FF
   717                           tosh	equ	0x4FE
   718                           tosl	equ	0x4FD
   719                           stkptr	equ	0x4FC
   720                           pclatu	equ	0x4FB
   721                           pclath	equ	0x4FA
   722                           pcl	equ	0x4F9
   723                           tblptru	equ	0x4F8
   724                           tblptrh	equ	0x4F7
   725                           tblptrl	equ	0x4F6
   726                           tablat	equ	0x4F5
   727                           prodh	equ	0x4F4
   728                           prodl	equ	0x4F3
   729                           indf0	equ	0x4EF
   730                           postinc0	equ	0x4EE
   731                           postdec0	equ	0x4ED
   732                           preinc0	equ	0x4EC
   733                           plusw0	equ	0x4EB
   734                           fsr0h	equ	0x4EA
   735                           fsr0l	equ	0x4E9
   736                           wreg	equ	0x4E8
   737                           indf1	equ	0x4E7
   738                           postinc1	equ	0x4E6
   739                           postdec1	equ	0x4E5
   740                           preinc1	equ	0x4E4
   741                           plusw1	equ	0x4E3
   742                           fsr1h	equ	0x4E2
   743                           fsr1l	equ	0x4E1
   744                           bsr	equ	0x4E0
   745                           indf2	equ	0x4DF
   746                           postinc2	equ	0x4DE
   747                           postdec2	equ	0x4DD
   748                           preinc2	equ	0x4DC
   749                           plusw2	equ	0x4DB
   750                           fsr2h	equ	0x4DA
   751                           fsr2l	equ	0x4D9
   752                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     20      20
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0     150
                                              0 COMRAM    20    20      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             200      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     14      14       1       21.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBIGSFR_1        100      0       0      36        0.0%
BIGRAM             FFF      0       0      37        0.0%
BITBIGSFRhhhh       29      0       0      38        0.0%
BITBIGSFRhhhlh       6      0       0      39        0.0%
BITBIGSFRhhhll       6      0       0      40        0.0%
BITBIGSFRhhlhhh      5      0       0      41        0.0%
BITBIGSFRhhlhhl      7      0       0      42        0.0%
BITBIGSFRhhlhlh     AE      0       0      43        0.0%
BITBIGSFRhhlhll      7      0       0      44        0.0%
BITBIGSFRhhllhh    14C      0       0      45        0.0%
BITBIGSFRhhllhl      9      0       0      46        0.0%
BITBIGSFRhhllhl     2E      0       0      47        0.0%
BITBIGSFRhhllhl     6E      0       0      48        0.0%
BITBIGSFRhhlll     18F      0       0      49        0.0%
BITBIGSFRhl          1      0       0      50        0.0%
BITBIGSFRl          70      0       0      51        0.0%
ABS                  0      0       0      52        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jul 14 19:30:15 2022

                     l71 FE6E                       l80 FFC8                       l72 FF38  
                     l73 FEAE                       l74 FED8                       l75 FF0A  
                     l69 FE42                       l78 FF6A                       l79 FF94  
                     u20 FE3E                       u21 FE3A                       u30 FE6E  
                     u31 FE6A                       u40 FE7C                       u41 FE78  
                     u50 FEAA                       u51 FEA6                       u60 FED8  
                     u61 FED4                       u70 FF06                       u71 FF02  
                     u80 FF34                       u81 FF30                       u90 FF66  
                     u91 FF62                      l810 FF0C                      l802 FEB0  
                    l820 FF96                      l812 FF3A                      l804 FEDA  
                    l822 FFA6                      l814 FF4A                      l806 FEEA  
                    l826 FFCA                      l818 FF6C                      l792 FE44  
                    l784 FE00                      l794 FE7C                      l786 FE10  
                    l796 FE7E                      l788 FE20                      l798 FE8E  
                    u100 FF94                      u101 FF90                      u110 FFC4  
                    u111 FFC0                      u120 FFF4                      u121 FFF0  
                   _main FE00                     start FFFC             ___param_bank 000000  
                  ?_main 0501                    _U1UIR 0002B1                    _U1RXB 0002A1  
                  main@i 0501                    status 0004D8          __initialization FDFA  
           __end_of_main FFFC                   ??_main 0501            __activetblptr 000000  
                 _CM1NCH 000072                   _CM1PCH 000073                   _U1CON0 0002AB  
                 _U1CON1 0002AC                   _U1CON2 0002AD                   _U1BRGH 0002AF  
                 _U1FIFO 0002B0                   _U1BRGL 0002AE                   _RA2PPS 000203  
                 isa$std 000001               __accesstop 0560  __end_of__initialization FDFA  
          ___rparam_used 000001           __pcstackCOMRAM 0501                  _U1ERRIE 0002B3  
                _U1ERRIR 0002B2                  __Hparam 0000                  __Lparam 0000  
                __pcinit FDFA                  __ramtop 1500                  __ptext0 FE00  
   end_of_initialization FDFA                _PORTBbits 0004CF                _TRISAbits 0004C6  
              _TRISBbits 0004C7                _TRISCbits 0004C8              _CM1CON0bits 000070  
    start_initialization FDFA                 _LATBbits 0004BF                 _LATCbits 0004C0  
               _PIR4bits 0004B7                main@i_370 0505                main@i_371 0509  
              main@i_372 050D                main@i_373 0511              _INTCON0bits 0004D6  
            _U1RXPPSbits 000272                 __Hrparam 0000                 __Lrparam 0000  
             _ANSELAbits 000400               _ANSELBbits 000408                 isa$xinst 000000  
